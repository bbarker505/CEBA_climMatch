home_bio
# Calculate global variance of recipient climate data (all columns)
all_var <- away_bio %>%
summarise_all(list(var), na.rm = TRUE)
globvar <- unname(unlist(c(all_var)))
##### Run Climatch ----
matchout <- climatch_vec(
recipient = away_clim,
source = home_clim,
globvar = globvar)
# Conduct analysis for individual bioclim variables and all variables
vars <- list("all", c("bio5","bio6"), "bio12", c("bio29","bio30"))
match_outs <- map(1:length(vars), function(i) {
if (any(vars[[i]] == "all")) {
# Calculate global variance of recipient climate data
globvar <- away_bio_df %>%
summarise_all(list(var), na.rm = TRUE)
# Climatch algorithm
matchout <- climatch_vec(
recipient = away_bio_df,
source = home_extr,
globvar = unlist(globvar))
} else {
# Calculate global variance of recipient climate data
globvar <- away_bio_df %>%
select(contains(vars[[i]])) %>%
summarise_all(list(var), na.rm = TRUE)
# Climatch algorithm
matchout <- climatch_vec(
recipient = select(away_bio_df, contains(vars[[i]])),
source = select(home_extr, contains(vars[[i]])),
globvar = unname(unlist(c(globvar))))
}
# Convert values to categories
match_df <- away_xy2 %>%
mutate(value = matchout) %>%
# Why are some match values crazy negative values??? -2147483648
filter(value >= 0) %>%
mutate(Climatch_fact = case_when(
value == 0 ~ "0",
value > 0 & value <= 1 ~ "0.1-1.0",
value >= 1 & value <= 2 ~ "1.1-2.0",
value >= 2 & value <= 3 ~ "2.1-3.0",
value >= 3 & value <= 4 ~ "3.1-4.0",
value > 4 & value <= 5 ~ "4.1-5.0",
value > 5 & value <= 6 ~ "5.1-6.0",
value > 6 & value <= 7 ~ "6.1-7.0",
value > 7 & value <= 8 ~ "7.1-8.0",
value > 8 & value <= 9 ~ "8.1-9.0",
value > 9 & value <= 10 ~ "9.1-10"
))
# Factorize Climatch score
match_df$Climatch_fact <- factor(
match_df$Climatch_fact, levels = unique(match_df$Climatch_fact[order(match_df$value)]))
return(match_df)
})
names(match_outs) <- c("all", "temp", "ppt",  "sm")
# Combine into a single data frame
cutoff2 <- 0.1 # Don't include 0 values
match_outs_df <- bind_rows(match_outs, .id = "variable") %>%
filter(complete.cases(.)) %>%
filter(value >= cutoff2) %>%
mutate(Climatch = round(value, 2))
# All variables
allMatch_plot <- Climatch_base_map("all") +
#labs(title = "(B) Climatch - All Variables") +
scale_fill_gradientn(
colours = GA::jet.colors(10),
name = "Score",
breaks = c(cutoff2, 2, 4, 6, 8),
limits = c(cutoff2, 9))
allMatch_plot
head(away_bio)
home_bio
# Calculate global variance of recipient climate data (all columns)
all_var <- away_bio %>%
summarise_all(list(var), na.rm = TRUE)
globvar <- unname(unlist(c(all_var)))
##### Run Climatch ----
matchout <- climatch_vec(
recipient = away_clim,
source = home_clim,
globvar = globvar)
##### Run Climatch ----
matchout <- climatch_vec(
recipient = away_bio,
source = home_bio,
globvar = globvar)
# Conduct analysis for individual bioclim variables and all variables
vars <- list("all", c("bio5","bio6"), "bio12", c("bio29","bio30"))
match_outs <- map(1:length(vars), function(i) {
if (any(vars[[i]] == "all")) {
# Calculate global variance of recipient climate data
globvar <- away_bio_df %>%
summarise_all(list(var), na.rm = TRUE)
# Climatch algorithm
matchout <- climatch_vec(
recipient = away_bio_df,
source = home_extr,
globvar = unlist(globvar))
} else {
# Calculate global variance of recipient climate data
globvar <- away_bio_df %>%
select(contains(vars[[i]])) %>%
summarise_all(list(var), na.rm = TRUE)
# Climatch algorithm
matchout <- climatch_vec(
recipient = select(away_bio_df, contains(vars[[i]])),
source = select(home_extr, contains(vars[[i]])),
globvar = unname(unlist(c(globvar))))
}
# Convert values to categories
match_df <- away_xy2 %>%
mutate(value = matchout) %>%
# Why are some match values crazy negative values??? -2147483648
filter(value >= 0) %>%
mutate(Climatch_fact = case_when(
value == 0 ~ "0",
value > 0 & value <= 1 ~ "0.1-1.0",
value >= 1 & value <= 2 ~ "1.1-2.0",
value >= 2 & value <= 3 ~ "2.1-3.0",
value >= 3 & value <= 4 ~ "3.1-4.0",
value > 4 & value <= 5 ~ "4.1-5.0",
value > 5 & value <= 6 ~ "5.1-6.0",
value > 6 & value <= 7 ~ "6.1-7.0",
value > 7 & value <= 8 ~ "7.1-8.0",
value > 8 & value <= 9 ~ "8.1-9.0",
value > 9 & value <= 10 ~ "9.1-10"
))
# Factorize Climatch score
match_df$Climatch_fact <- factor(
match_df$Climatch_fact, levels = unique(match_df$Climatch_fact[order(match_df$value)]))
return(match_df)
})
names(match_outs) <- c("all", "temp", "ppt",  "sm")
# Combine into a single data frame
cutoff2 <- 0.1 # Don't include 0 values
match_outs_df <- bind_rows(match_outs, .id = "variable") %>%
filter(complete.cases(.)) %>%
filter(value >= cutoff2) %>%
mutate(Climatch = round(value, 2))
# All variables
allMatch_plot <- Climatch_base_map("all") +
#labs(title = "(B) Climatch - All Variables") +
scale_fill_gradientn(
colours = GA::jet.colors(10),
name = "Score",
breaks = c(cutoff2, 2, 4, 6, 8),
limits = c(cutoff2, 9))
allMatch_plot
head(match_outs_df)
ggplot() +
geom_sf(data = na_states, fill = "gray90", linewidth = 0.5, color = "gray20") +
geom_raster(data = filter(match_outs_df, variable == v), aes(x = x, y = y, fill = value)) +
geom_sf(data = na_states_l, color = "gray15") +
annotation_spatial_hline(intercept = kilkis[2], crs = 4326, color = "white", size = 1.25, alpha=0.85) +
annotation_spatial_hline(intercept = kilkis[2], crs = 4326, color = "black", size = 0.5, linetype="dashed") +
mytheme
v
v<-"all"
ggplot() +
geom_sf(data = na_states, fill = "gray90", linewidth = 0.5, color = "gray20") +
geom_raster(data = filter(match_outs_df, variable == v), aes(x = x, y = y, fill = value)) +
geom_sf(data = na_states_l, color = "gray15") +
annotation_spatial_hline(intercept = kilkis[2], crs = 4326, color = "white", size = 1.25, alpha=0.85) +
annotation_spatial_hline(intercept = kilkis[2], crs = 4326, color = "black", size = 0.5, linetype="dashed") +
mytheme
# Get rasters for all bioclim variables
away_bio_r <- rast(
list.files(here("data", "bioclim", "away"), pattern = ".tif$", full.names = TRUE))
plot(away_bio_r[[1]])
# Remove exponential notation and increase decimal lengths in R
options("scipen"=100, "digits"=10)
# Convert raster to a data frame and select desired columns
away_bio <- as.data.frame(away_bio_r, xy=TRUE)
# XY coordinates for away
away_xy2 <- select(away_bio, x, y)
# Remove XY coords for analysis
away_bio <- select(away_bio, bio5, bio6, bio12, bio29, bio30, -x, -y)
head(away_xy2)
# Remove XY coords for analysis
away_bio <- select(away_bio, bio5, bio6, bio12, bio29, bio30, -x, -y)
head(away_bio)
# Remove large raster (no longer needed)
rm(away_bio_r)
# Home climate
# Extracted from bioclim vars derived from E-OBS data that had been
# downscaled to a 1-km2 resolution
home_bio <- read.csv(here("data", "bioclim", "home", "kilkis.csv"))
# Calculate global variance of recipient climate data (all columns)
all_var <- away_bio %>%
summarise_all(list(var), na.rm = TRUE)
globvar <- unname(unlist(c(all_var)))
all_var
globvar
home_bio
# Conduct analysis for individual bioclim variables and all variables
vars <- list("all", c("bio5","bio6"), "bio12", c("bio29","bio30"))
# Conduct analysis for individual bioclim variables and all variables
vars <- list("all", c("bio5","bio6"), "bio12", c("bio29","bio30"))
match_outs <- map(1:length(vars), function(i) {
if (any(vars[[i]] == "all")) {
# Calculate global variance of recipient climate data
globvar <- away_bio %>%
summarise_all(list(var), na.rm = TRUE)
# Climatch algorithm
matchout <- climatch_vec(
recipient = away_bio,
source = home_extr,
globvar = unlist(globvar))
} else {
# Calculate global variance of recipient climate data
globvar <- away_bio %>%
select(contains(vars[[i]])) %>%
summarise_all(list(var), na.rm = TRUE)
# Climatch algorithm
matchout <- climatch_vec(
recipient = select(away_bio, contains(vars[[i]])),
source = select(home_home, contains(vars[[i]])),
globvar = unname(unlist(c(globvar))))
}
# Convert values to categories
match_df <- away_xy2 %>%
mutate(value = matchout) %>%
# Why are some match values crazy negative values??? -2147483648
filter(value >= 0) %>%
mutate(Climatch_fact = case_when(
value == 0 ~ "0",
value > 0 & value <= 1 ~ "0.1-1.0",
value >= 1 & value <= 2 ~ "1.1-2.0",
value >= 2 & value <= 3 ~ "2.1-3.0",
value >= 3 & value <= 4 ~ "3.1-4.0",
value > 4 & value <= 5 ~ "4.1-5.0",
value > 5 & value <= 6 ~ "5.1-6.0",
value > 6 & value <= 7 ~ "6.1-7.0",
value > 7 & value <= 8 ~ "7.1-8.0",
value > 8 & value <= 9 ~ "8.1-9.0",
value > 9 & value <= 10 ~ "9.1-10"
))
# Factorize Climatch score
match_df$Climatch_fact <- factor(
match_df$Climatch_fact, levels = unique(match_df$Climatch_fact[order(match_df$value)]))
return(match_df)
})
# Combine into a single data frame
cutoff2 <- 0.1 # Don't include 0 values
# Climatch algorithm
matchout <- climatch_vec(
recipient = select(away_bio, contains(vars[[i]])),
source = select(home_bio, contains(vars[[i]])),
globvar = unname(unlist(c(globvar))))
match_outs <- map(1:length(vars), function(i) {
if (any(vars[[i]] == "all")) {
# Calculate global variance of recipient climate data
globvar <- away_bio %>%
summarise_all(list(var), na.rm = TRUE)
# Climatch algorithm
matchout <- climatch_vec(
recipient = away_bio,
source = home_extr,
globvar = unlist(globvar))
} else {
# Calculate global variance of recipient climate data
globvar <- away_bio %>%
select(contains(vars[[i]])) %>%
summarise_all(list(var), na.rm = TRUE)
# Climatch algorithm
matchout <- climatch_vec(
recipient = select(away_bio, contains(vars[[i]])),
source = select(home_bio, contains(vars[[i]])),
globvar = unname(unlist(c(globvar))))
}
# Convert values to categories
match_df <- away_xy2 %>%
mutate(value = matchout) %>%
# Why are some match values crazy negative values??? -2147483648
filter(value >= 0) %>%
mutate(Climatch_fact = case_when(
value == 0 ~ "0",
value > 0 & value <= 1 ~ "0.1-1.0",
value >= 1 & value <= 2 ~ "1.1-2.0",
value >= 2 & value <= 3 ~ "2.1-3.0",
value >= 3 & value <= 4 ~ "3.1-4.0",
value > 4 & value <= 5 ~ "4.1-5.0",
value > 5 & value <= 6 ~ "5.1-6.0",
value > 6 & value <= 7 ~ "6.1-7.0",
value > 7 & value <= 8 ~ "7.1-8.0",
value > 8 & value <= 9 ~ "8.1-9.0",
value > 9 & value <= 10 ~ "9.1-10"
))
# Factorize Climatch score
match_df$Climatch_fact <- factor(
match_df$Climatch_fact, levels = unique(match_df$Climatch_fact[order(match_df$value)]))
return(match_df)
})
names(match_outs) <- c("all", "temp", "ppt",  "sm")
# Combine into a single data frame
cutoff2 <- 0.1 # Don't include 0 values
match_outs_df <- bind_rows(match_outs, .id = "variable") %>%
filter(complete.cases(.)) %>%
filter(value >= cutoff2) %>%
mutate(Climatch = round(value, 2))
# All variables
allMatch_plot <- Climatch_base_map("all") +
#labs(title = "(B) Climatch - All Variables") +
scale_fill_gradientn(
colours = GA::jet.colors(10),
name = "Score",
breaks = c(cutoff2, 2, 4, 6, 8),
limits = c(cutoff2, 9))
allMatch_plots
allMatch_plot
# Temperature variables (bio5, bio6)
tempMatch_plot <- Climatch_base_map("temp") +
labs(title = "(A) Temperature") +
scale_fill_gradientn(
colours = rev(pals::kovesi.linear_kry_5_95_c72(10)),
name = "Score",
breaks = c(cutoff2, seq(2,10,2)),
limits = c(cutoff2,10))
# Total precipitation (bio12)
rtotMatch_plot <- Climatch_base_map("ppt") +
labs(title = "(B) Precipitation") +
scale_fill_gradientn(
colours = rev(pals::kovesi.linear_blue_5_95_c73(10)),
name = "Score",
breaks = c(cutoff2, seq(2,10,2)),
limits = c(cutoff2,10))
# Soil moisture variables (bio29, bio30)
smMatch_plot <- Climatch_base_map("sm") +
labs(title = "(C) Soil Moisture") +
scale_fill_gradientn(
colours = rev(pals::ocean.solar(10)),
name = "Score",
breaks = c(cutoff2, seq(2,10,2)),
limits = c(cutoff2,10))
# Save all plots individually
matchmaps <- list(allMatch_plot, tempMatch_plot, rtotMatch_plot, smMatch_plot)
flnams <- c("allvars", "temp", "ppt", "sm")
map(1:length(flnams), function(i) {
ggsave(matchmaps[[i]],
filename = here("plots", "Climatch",
paste0("Climatch_", flnams[i], "_", dat, ".png")),
width = 7, height = 7, units = c('in'), dpi = 300)
})
#### All variables ----
# Combine plots into one plot
match_1 <- plot_grid(tempMatch_plot, rtotMatch_plot)
match_2 <- plot_grid(smMatch_plot, allMatch_plot)
match_all <- plot_grid(match_1, match_2, nrow = 2)
# Combine CMI plot and Climatch plot w/ all variables
final_all <- plot_grid(
cmi_plot +
ggtitle("(A)") +
theme(plot.margin = margin(t = 0.1, r = 0, b = 0, l = 0, unit = "cm"),
plot.title = element_text(size = rel(2), vjust = 1.25, hjust = -0.15, face = "bold")),
allMatch_plot +
ggtitle("(B)") +
theme(plot.margin = margin(t = 0.1, r = 0, b = 0, l = 0, unit = "cm"),
plot.title = element_text(size = rel(2), vjust = 1.25, hjust = -0.15, face = "bold")),
nrow = 1)
ggsave(final_all,
filename = here("plots",
paste0("CMI_Climatch_final_", dat, ".png")),
width = 11, height = 6, units = c('in'), dpi = 300, bg = "white")
# County-level detections for YST (EDDMapS)
yst <- st_read(here("data", "YST_counties", "YST_counties_9-19-24.shp")) %>%
st_transform(crs = crs(cmi_thr)) %>%
mutate(Status = factor(case_when(present == "Present" ~ "Detected",
present == "Absent" ~ "Undetected"))) %>%
select(Status, geometry) %>%
st_crop(na_states)
away_prj <- crs(away_bio_r)
# Get rasters for all bioclim variables
away_bio_r <- rast(
list.files(here("data", "bioclim", "away"), pattern = ".tif$", full.names = TRUE))
away_prj <- crs(away_bio_r)
away_prj
# County-level detections for YST (EDDMapS)
yst <- st_read(here("data", "YST_counties", "YST_counties_9-19-24.shp")) %>%
st_transform(crs = away_prj) %>%
mutate(Status = factor(case_when(present == "Present" ~ "Detected",
present == "Absent" ~ "Undetected"))) %>%
select(Status, geometry) %>%
st_crop(na_states)
# Polygons for climate matching
# CLIMEX - CMI
cmi_thr <-  all_ind %>%
mutate(matched = ifelse(cmi >= 0.6, 1, NA)) %>%
select(x, y, matched) %>%
rast(crs = away_prj) %>%
as.polygons() %>%
st_as_sf()
cmi_thr$matched <- factor(cmi_thr$matched)
# Climatch - all variables
clim_thr <-  match_outs_df %>%
filter(variable == "all") %>%
mutate(matched = ifelse(Climatch >= 0.1, 1, 0)) %>%
select(x, y, matched) %>%
rast(crs = away_prj) %>%
as.polygons() %>%
st_as_sf()
# Join the YST detection polygon with threshold polygons
yst_cmi <- st_intersection(yst, cmi_thr) %>%
select(matched, Status, geometry)
yst_clim <- st_intersection(yst, clim_thr) %>%
select(matched, Status, geometry)
# Make plots
cmi_yst <- YST_base_plot(yst_cmi)
clim_yst <- YST_base_plot(yst_clim)
cmi_yst
# Adjust some theme elements for CMI and Climatch plots
cmi_plot2 <- cmi_plot +
theme(plot.margin = margin(t = 0.5, r = -0.25, b = 0.25, l = 0.3, unit = "cm"),
plot.background = element_rect(colour = NA, fill = NA))
allMatch_plot2 <- allMatch_plot +
theme(plot.margin = margin(t = 0.5, r = -0.25, b = 0.25, l = 0.3, unit = "cm"),
plot.background = element_rect(colour = NA, fill = NA))
# Combine CLIMEX-based plots and Climatch plots (thresholds + YST)
both_cmi <- plot_grid(cmi_plot2, cmi_yst, nrow = 1, align = c("hv"),
rel_heights = c(1.12, 1), rel_widths = c(1.12, 1)) +
theme(plot.background = element_rect(colour = "black", linewidth = 0.7))
both_match <- plot_grid(allMatch_plot2, clim_yst, nrow = 1, align = c("hv"),
rel_heights = c(1.12, 1), rel_widths = c(1.12, 1)) +
theme(plot.background = element_rect(colour = "black", linewidth = 0.7))
# Combine all 4 plots (CMI, Climatch, YST-CMI, and YST-Climatch)
final_all4 <- plot_grid(both_cmi, both_match, nrow = 2,
labels = c("(A)", "(B)"), label_size = 24, hjust = -0.05) +
theme(plot.margin = margin(t = 1, r =1, b = 1, l = 1, unit = "pt"))
ggsave(final_all4,
filename = here("plots",
paste0("CMI_Climatch_thres_final_", dat, ".png")),
width = 12, height = 13, units = c('in'), dpi = 300, bg = "white")
#### Single variables ----
# Combine CLIMEX-based plots and Climatch plots (full output)
mytheme2 <- theme(legend.position = "right",
legend.key.height  =  unit(1.25, "cm"),
legend.key.width = unit(0.75, "cm"),
plot.title = element_text(size = 16, face = "bold", hjust = -0.25),
axis.text = element_text(size = 10, face = "bold", colour = "black"),
plot.background = element_rect(colour = NA, fill = NA),
#panel.background = element_rect(fill = NA, colour = NA),
plot.margin = margin(t = 0.25, r = 0, b = 0.25, l = 0, unit = "cm"),
legend.title = element_text(size = 16, hjust = 0, vjust = 0.95, face = "bold"))
# Combine temperature index plot and Climatch plot for temperature variables
# Temperature
final_temp <- plot_grid(tempi_plot + ggtitle("(A) Temperature") + mytheme2,
tempMatch_plot + ggtitle("") + mytheme2, nrow = 1) +
theme(plot.background = element_rect(colour = "black", fill = NA))
# Combine moisture index plot and Climatch plot for annual precipitation
# precipitation/moisture
final_rtot <- plot_grid(rtoti_plot + ggtitle("(B) Precipitation") + mytheme2,
rtotMatch_plot + ggtitle("") + mytheme2, nrow = 1) +
theme(plot.background = element_rect(colour = "black", fill = NA))
# Combine soil moisture index plot and Climatch plot for soil moisture variables
# Soil moisture
final_sm <- plot_grid(smi_plot + ggtitle("(C) Soil moisture") + mytheme2,
smMatch_plot + ggtitle("") + mytheme2, nrow = 1) +
theme(plot.background = element_rect(colour = "black", fill = NA))
# Combine all 6 plots for publication
final_3fact <- plot_grid(final_temp, final_rtot, final_sm, nrow = 3) +
theme(plot.margin = margin(t = 1, r =1, b = 1, l = 1, unit = "pt"))
# Combine all 6 plots for publication (Fig. 3)
final_3fact <- plot_grid(final_temp, final_rtot, final_sm, nrow = 3) +
theme(plot.margin = margin(t = 1, r =1, b = 1, l = 1, unit = "pt"))
ggsave(final_3fact,
filename = here("plots", paste0("ThreeFactors_final_", dat, ".png")),
width = 10, height = 12, units = c('in'), dpi = 300, bg = "white")
# Combine all 6 plots
final_3fact <- plot_grid(final_temp, final_rtot, final_sm, nrow = 3) +
theme(plot.margin = margin(t = 1, r =1, b = 1, l = 1, unit = "pt"))
ggsave(final_3fact,
filename = here("plots", paste0("ThreeFactors_final_", dat, ".png")),
width = 10, height = 12, units = c('in'), dpi = 300, bg = "white")
# Template
template <- rast(extent = ext(away_bio), ncol=ncol(away_bio), nrow = nrow(away_bio))
# Get rasters for all bioclim variables
away_bio_r <- rast(
list.files(here("data", "bioclim", "away"), pattern = ".tif$", full.names = TRUE))
away_prj <- crs(away_bio_r) # For plots, below
away_ext <- ext(away_bio_r) # For conversion of results to rasters, below
away_ext
# Get rasters for all bioclim variables
away_bio_r <- rast(
list.files(here("data", "bioclim", "away"), pattern = ".tif$", full.names = TRUE))
away_prj <- crs(away_bio_r) # For plots, below
away_templ <- away_bio_r[[1]] # For conversion of results to rasters, below
way_templ
away_templ
# Loop through output list, rasterize, and save
inds <- names(select(all_ind, -x, -y))
# Custom CMI
for (ind in inds) {
# Rasterize
df <- select(all_ind, x, y, ind)
r <- rast(df, extent = ext(away_templ))
# Save raster
writeRaster(
r, filename = here("raster_outputs", "CLIMEX_custom",
paste0(ind, "_CLIMEX_custom_", dat, ".tif")), overwrite=TRUE)
}
# Climatch
for (i in 1:length(match_outs)) {
nam <- names(match_outs[i])
df <- match_outs[[i]] %>%
select(-Climatch_fact)
r <- rast(df, extent = ext(away_templ))
# Save raster
writeRaster(
r, filename = here("raster_outputs", "Climatch",
paste0(nam, "_Climatch_", dat, ".tif")), overwrite=TRUE)
}

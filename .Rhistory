# Counties
counties <- st_read(here("data", "YST_counties", "YST_counties_9-19-24.shp"))
counties_l <- st_cast(counties, "MULTILINESTRING")
# County-level presence
yst <- st_read(here("data", "YST_counties", "YST_counties_9-19-24.shp")) %>%
filter(present == "Present") %>%
st_transform(crs = crs(away_bio))
yst$present <- factor(yst$present)
head(yst)
dim(yst)
unique(yst$STATEFP)
View(yst)
View(yst)
filter(is.na(yst, is.na(STATEFP)))
filter(yst is.na(STATEFP))
filter(yst, is.na(STATEFP))
unique(yst$STATEFP)
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "green3") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "gray50", show.legend = FALSE) +
geom_sf(data = counties_l, color = "gray10") +
mytheme
match_thr
# Polygons for climate matching
# CLIMEX - CMI
cmi_thr <-  all_ind %>%
mutate(matched = ifelse(cmi >= 0.5, 1, NA)) %>%
select(x, y, matched) %>%
rast(crs = crs(away_bio)) %>%
as.polygons() %>%
st_as_sf()
cmi_thr$matched <- factor(cmi_thr$matched)
cmi_thr
plot(cmi_thr)
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "green3") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "gray50", show.legend = FALSE) +
geom_sf(data = na_states, fill = "gray90") +
geom_sf(data = counties_l, color = "gray10") +
mytheme
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "green3") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "gray50", show.legend = FALSE) +
geom_sf(data = na_states, fill = "gray90") +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "green3") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "gray50", show.legend = FALSE) +
geom_sf(data = na_states, fill = "gray90", fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "green3") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "gray50", show.legend = FALSE) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "green3") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "green3") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "gray70", show.legend = FALSE) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "gold") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "gray70", show.legend = FALSE) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "gold") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
cmi_thr
# Intersect
cmi_yst <- st_intersects(cmi_thr, counties_l)
st_crs(cmi_thr)
st_crs(counties_l)
# Intersect
cmi_yst <- st_intersects(cmi_thr, yst)
plot(cmi_yst)
cmi_yst
# Create column indicating if CMI meets threshold for the county
cmi_thr <-  cmi_thr %>%
mutate(present = factor(ifelse(yst == 0, "Absent", "Present")))
# Create column indicating if CMI meets threshold for the county
cmi_thr <-  cmi_thr %>%
mutate(present = factor(ifelse(cmi_yst == 0, "Absent", "Present")))
# Polygons for climate matching
# CLIMEX - CMI
cmi_thr <-  all_ind %>%
mutate(matched = ifelse(cmi >= 0.5, 1, NA)) %>%
select(x, y, matched) %>%
rast(crs = crs(away_bio)) %>%
as.polygons() %>%
st_as_sf()
cmi_thr$matched <- factor(cmi_thr$matched)
# Create column indicating if CMI meets threshold for the county
cmi_thr <-  cmi_thr %>%
mutate(cmi_yst = lengths(n_pts),
present = factor(ifelse(cmi_yst == 0, "Absent", "Present")))
# Create column indicating if CMI meets threshold for the county
cmi_thr <-  cmi_thr %>%
mutate(cmi_yst = lengths(cmi_yst),
present = factor(ifelse(cmi_yst == 0, "Absent", "Present")))
cmi_thr
plot(cmi_thr)
# Intersect
cmi_yst <- st_intersects(yst, cmi_thr)
# Create column indicating if CMI meets threshold for the county
cmi_thr <-  cmi_thr %>%
mutate(cmi_yst = lengths(cmi_yst),
present = factor(ifelse(cmi_yst == 0, "Absent", "Present")))
plot(cmi_thr)
# Polygons for climate matching
# CLIMEX - CMI
cmi_thr <-  all_ind %>%
mutate(matched = ifelse(cmi >= 0.5, 1, NA)) %>%
select(x, y, matched) %>%
rast(crs = crs(away_bio)) %>%
as.polygons() %>%
st_as_sf()
cmi_thr$matched <- factor(cmi_thr$matched)
# Intersect
cmi_yst <- st_intersects(yst, cmi_thr)
# Create column indicating if CMI meets threshold for the county
cmi_thr <-  cmi_thr %>%
mutate(cmi_yst = lengths(cmi_yst),
present = factor(ifelse(cmi_yst == 0, "Absent", "Present")))
# Intersect
cmi_yst <- st_intersects(yst, cmi_thr)
cmi_yst
# Create column indicating if CMI meets threshold for the county
cmi_thr <-  cmi_thr %>%
mutate(cmi_yst = lengths(cmi_yst),
present = factor(ifelse(cmi_yst == 0, "Absent", "Present")))
# Create column indicating if CMI meets threshold for the county
cmi_thr <-  cmi_thr %>%
mutate(cmi_yst = length(cmi_yst),
present = factor(ifelse(cmi_yst == 0, "Absent", "Present")))
plot(cmi_thr)
# Polygons for climate matching
# CLIMEX - CMI
cmi_thr <-  all_ind %>%
mutate(matched = ifelse(cmi >= 0.6, 1, NA)) %>%
select(x, y, matched) %>%
rast(crs = crs(away_bio)) %>%
as.polygons() %>%
st_as_sf()
cmi_thr$matched <- factor(cmi_thr$matched)
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "gold") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
test <- st_overlaps(yst, cmi_thr)
plot(test)
test
test %>%
mutate(cmi_yst = lengths(test),
present = factor(ifelse(test== 0, "Absent", "Present")))
yst %>%
mutate(cmi_yst = lengths(test),
present = factor(ifelse(test== 0, "Absent", "Present")))
yst %>%
mutate(
present = factor(ifelse(test== 0, "Absent", "Present")))
test
yst %>%
mutate(present = ifelse(test== 0, "Absent", "Present"))
yst
length(yst)
length(tst)
length(test)
length(cmi_thr)
nrow(yst)
test==0
test
test <- st_intersects(yst, cmi_thr)
yst %>%
mutate(present = ifelse(test== 0, "Absent", "Present"))
# Intersect
n_pts <- st_intersects(yst, cmi_thr)
# Create column indicating if there at least 1 location in the county
counties2 <-  yst %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
plot(counties2)
plot(counties2, max.plot=1)
# Intersect
n_pts <- st_intersects(cmi_thr, yst)
# Create column indicating if there at least 1 location in the county
counties2 <-  cmi_thr %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
plot(counties2, max.plot=1)
plot(cmi_thr, max.plot=1)
# Intersect
n_pts <- st_overlaps(cmi_thr, yst)
# Create column indicating if there at least 1 location in the county
counties2 <-  cmi_thr %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
plot(counties2, max.plot=1)
n_pts
?st_overlaps
# Intersect
n_pts <- st_intersection(cmi_thr, yst)
# Create column indicating if there at least 1 location in the county
counties2 <-  cmi_thr %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
n_pts
# Polygons for climate matching
# CLIMEX - CMI
cmi_thr <-  all_ind %>%
mutate(matched = ifelse(cmi >= 0.6, 1, NA)) %>%
select(x, y, matched) %>%
rast(crs = crs(away_bio)) %>%
as.polygons() %>%
st_as_sf()
cmi_thr$matched <- factor(cmi_thr$matched)
# Intersect
n_pts <- st_intersection(cmi_thr, yst)
# Create column indicating if there at least 1 location in the county
counties2 <-  cmi_thr %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
# Intersect
n_pts <- st_touches(cmi_thr, yst)
# Intersect
n_pts <- st_intersects(yst, cmi_thr)
# Create column indicating if there at least 1 location in the county
counties2 <-  cmi_thr %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
# Intersect
n_pts <- st_intersects(yst, cmi_thr)
# Create column indicating if there at least 1 location in the county
counties2 <-  cmi_thr %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
# Polygons for climate matching
# CLIMEX - CMI
cmi_thr <-  all_ind %>%
mutate(matched = ifelse(cmi >= 0.6, 1, NA)) %>%
select(x, y, matched) %>%
rast(crs = crs(away_bio)) %>%
as.polygons() %>%
st_as_sf()
cmi_thr$matched <- factor(cmi_thr$matched)
# Intersect
n_pts <- st_intersects(yst, cmi_thr)
# Create column indicating if there at least 1 location in the county
counties2 <-  yst %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
plot(counties, max.plot=1)
# Intersect
n_pts <- st_overlaps(yst, cmi_thr)
# Create column indicating if there at least 1 location in the county
counties2 <-  yst %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
plot(counties2, max.plot=1)
# Intersect
n_pts <- st_overlaps(cmi_thr, yst)
# Create column indicating if there at least 1 location in the county
counties2 <-  cmi_thr %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
plot(counties2, max.plot=1)
# Intersect
n_pts <- st_intersects(cmi_thr, yst)
# Create column indicating if there at least 1 location in the county
counties2 <-  cmi_thr %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
plot(counties2, max.plot=1)
# Intersect
n_pts <- st_intersects(yst, cmi_thr)
# Create column indicating if there at least 1 location in the county
counties2 <-  yst %>%
mutate(n_pts = lengths(n_pts),
present = factor(ifelse(n_pts == 0, "Absent", "Present")))
plot(counties2, max.plot=1)
nrow(yst)
names(yst)
filter(yst,present == 1 )
unique(yst$present)
yst2 <- filter(yst,present == "Present" )
nrow(yst2)
rm(yst2)
# Polygons for climate matching
# CLIMEX - CMI
cmi_thr <-  all_ind %>%
mutate(matched = ifelse(cmi >= 0.6, 1, NA)) %>%
select(x, y, matched) %>%
rast(crs = crs(away_bio)) %>%
as.polygons() %>%
st_as_sf()
cmi_thr$matched <- factor(cmi_thr$matched)
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "gold") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
?st_difference
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "gold") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
test <- st_difference(cmi_thr, yst)
test
plot(test, max.plot=1)
plot(test, max.plot=1)
ggplot() +
#geom_sf(data = yst, aes(fill = present), fill = "gold") +
#geom_sf(data = cmi_thr, aes(fill = matched),
#        alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = test) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
dev.off()
ggplot() +
#geom_sf(data = yst, aes(fill = present), fill = "gold") +
#geom_sf(data = cmi_thr, aes(fill = matched),
#        alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = test) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
test
nrow(test)
names(cmi_thr)
names(yst)
names(test)
ggplot() +
#geom_sf(data = yst, aes(fill = present), fill = "gold") +
#geom_sf(data = cmi_thr, aes(fill = matched),
#        alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = test, aes(fill = matched)) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
ggplot() +
geom_sf(data = yst, aes(fill = present), fill = "gold") +
geom_sf(data = cmi_thr, aes(fill = matched),
alpha = 0.6, fill = "blue", show.legend = FALSE) +
#geom_sf(data = test, aes(fill = matched)) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
test <- st_snap(cmi_thr, yst)
yst2 <- st_transform(yst, cmi_thr)
yst2 <- st_transform(yst, st_crs(cmi_thr))
test <- st_snap(cmi_thr, yst)
test <- st_within(yst2, cmi_thr)
test <- st_union(yst2, cmi_thr)
names(test)
names(yst)
ggplot() +
#geom_sf(data = yst, aes(fill = present), fill = "gold") +
#geom_sf(data = cmi_thr, aes(fill = matched),
#        alpha = 0.6, fill = "blue", show.legend = FALSE) +
geom_sf(data = test, aes(fill = matched)) +
geom_sf(data = na_states, fill = NA) +
geom_sf(data = counties_l, color = "gray10", fill = NA) +
mytheme
# Cut-off threshold (values below this aren't shown)
cutoff <- 0.6
all_ind_l <- all_ind %>%
pivot_longer(cols = indices) %>%
filter(value >= cutoff)
# Apply plotting function to climate matching model outputs
# Composite match index
cmi_plot <- CMI_base_map(ind = "cmi") +
labs(title = "Composite Match Index (CMI)") +
scale_fill_gradientn(colours = GA::jet.colors(10), name = "CMI",
breaks = seq(cutoff, maxvals$cmi, 0.1),
limits = c(cutoff, maxvals$cmi))
# Temperature index
tempi_plot <- CMI_base_map(ind = "tempi") +
labs(title = "(A) Temperature Index") +
scale_fill_gradientn(colours = rev(pals::kovesi.linear_kry_5_95_c72(10)),
name = expression(bolditalic(I[t])),
breaks = seq(cutoff, maxvals$tempi, 0.1),
limits = c(cutoff, 0.9))
# Moisture index
rtoti_plot <- CMI_base_map(ind = "rtoti") +
labs(title = "(A) Moisture Index") +
scale_fill_gradientn(colours = rev(pals::kovesi.linear_blue_5_95_c73(10)),
name = expression(bolditalic(I[m])),
breaks = seq(cutoff, maxvals$rtoti,0.1),
limits = c(cutoff,1.0))
# Soil moisture index
smi_plot <- CMI_base_map(ind = "smi") +
labs(title = "(A) Soil Moisture Index") +
scale_fill_gradientn(colours = rev(pals::ocean.solar(10)),
name = expression(bolditalic(I[sm])),
breaks = seq(cutoff, maxvals$smi, 0.1),
limits = c(cutoff,1.0))
# Save all plots individually
# Add date to file name
dat <- Sys.Date()
dat <- format(dat, "%m-%d-%y")
# List of files to save
indmaps <- list(tempi_plot, smi_plot, rtoti_plot, cmi_plot)
map(1:length(indices), function(i) {
ggsave(indmaps[[i]],
filename = here("plots", "CLIMEX_custom", paste0(indices[i], "_", dat, ".png")),
width = 7, height = 7, units = c('in'), dpi = 300)
})
# Get rasters for all bioclim variables
home_bio <- rast(
list.files(here("data", "bioclim", "home"), pattern = ".tif$", full.names = TRUE))
# Cut-off threshold (values below this aren't shown)
cutoff <- 0.6
all_ind_l <- all_ind %>%
pivot_longer(cols = indices) %>%
filter(value >= cutoff)
# Apply plotting function to climate matching model outputs
# Composite match index
cmi_plot <- CMI_base_map(ind = "cmi") +
labs(title = "Composite Match Index (CMI)") +
scale_fill_gradientn(colours = GA::jet.colors(10), name = "CMI",
breaks = seq(cutoff, maxvals$cmi, 0.1),
limits = c(cutoff, maxvals$cmi))
# Temperature index
tempi_plot <- CMI_base_map(ind = "tempi") +
labs(title = "(A) Temperature Index") +
scale_fill_gradientn(colours = rev(pals::kovesi.linear_kry_5_95_c72(10)),
name = expression(bolditalic(I[t])),
breaks = seq(cutoff, maxvals$tempi, 0.1),
limits = c(cutoff, 0.9))
# Moisture index
rtoti_plot <- CMI_base_map(ind = "rtoti") +
labs(title = "(A) Moisture Index") +
scale_fill_gradientn(colours = rev(pals::kovesi.linear_blue_5_95_c73(10)),
name = expression(bolditalic(I[m])),
breaks = seq(cutoff, maxvals$rtoti,0.1),
limits = c(cutoff,1.0))
# Soil moisture index
smi_plot <- CMI_base_map(ind = "smi") +
labs(title = "(A) Soil Moisture Index") +
scale_fill_gradientn(colours = rev(pals::ocean.solar(10)),
name = expression(bolditalic(I[sm])),
breaks = seq(cutoff, maxvals$smi, 0.1),
limits = c(cutoff,1.0))
# Save all plots individually
# Add date to file name
dat <- Sys.Date()
dat <- format(dat, "%m-%d-%y")
# List of files to save
indmaps <- list(tempi_plot, smi_plot, rtoti_plot, cmi_plot)
map(1:length(indices), function(i) {
ggsave(indmaps[[i]],
filename = here("plots", "CLIMEX_custom", paste0(indices[i], "_", dat, ".png")),
width = 7, height = 7, units = c('in'), dpi = 300)
})
# Combine plots into one plot
match_1 <- plot_grid(tempMatch_plot, rtotMatch_plot)
match_2 <- plot_grid(smMatch_plot, allMatch_plot)
match_all <- plot_grid(match_1, match_2, nrow = 2)
# Combine CMI plot and Climatch plot w/ all variables
final_all <- plot_grid(
cmi_plot +
ggtitle("(A)") +
theme(plot.margin = margin(t = 0.1, r = 0, b = 0, l = 0, unit = "cm"),
plot.title = element_text(size = rel(2), vjust = 1.25, hjust = -0.15, face = "bold")),
allMatch_plot +
ggtitle("(B)") +
theme(plot.margin = margin(t = 0.1, r = 0, b = 0, l = 0, unit = "cm"),
plot.title = element_text(size = rel(2), vjust = 1.25, hjust = -0.15, face = "bold")),
nrow = 1)
ggsave(final_all,
filename = here("plots",
paste0("CMI_Climatch_final_", dat, ".png")),
width = 11, height = 6, units = c('in'), dpi = 300, bg = "white")
test <- st_join(yst2, cmi_thr)
names(test)
nrow(test)
nrow(yst)
nrow(cmi_thr)
?st_contrains
?st_contains
